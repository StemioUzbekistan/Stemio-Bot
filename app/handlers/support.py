from aiogram import Router, F, types, Bot
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy import BigInteger

from app.states.registration import Support
from app.core.config import SUPPORT_GROUP_ID

router = Router()

# --- 1. –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —á–∞—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π  ---

@router.message(F.text.in_({"üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", "üí¨ Qo'llab-quvvatlash"}))
async def start_support_chat_handler(message: types.Message, state: FSMContext, lexicon: dict):
    user_data = await state.get_data()
    if menu_msg_id := user_data.get('main_menu_message_id'):
        try:
            await message.bot.delete_message(message.chat.id, menu_msg_id)
        except Exception:
            pass
    lang = (await state.get_data()).get('language', 'ru')
    await state.set_state(Support.active_chat)
    
    await message.answer(lexicon[lang].get('support-welcome', 
        "–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —á–∞—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –º—ã —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏–º.\n\n"
        "–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop"
    ))

# --- 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ ---

@router.message(Support.active_chat, F.text != "/stop")
async def forward_to_support_group_handler(message: types.Message, bot: Bot):
    user_info = (
        f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        f"ID: {message.from_user.id}\n"
        f"Username: @{message.from_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"–ò–º—è: {message.from_user.full_name}"
    )
    await bot.send_message(SUPPORT_GROUP_ID, user_info)
    await bot.forward_message(
        chat_id=SUPPORT_GROUP_ID,
        from_chat_id=message.chat.id,
        message_id=message.message_id
    )
    await message.answer("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")


# --- 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---
@router.message(F.chat.id == int(SUPPORT_GROUP_ID), F.reply_to_message)
async def forward_to_user_handler(message: types.Message, bot: Bot):

    if message.reply_to_message.forward_from:
        user_id = message.reply_to_message.forward_from.id
        
        try:
            await bot.send_message(user_id, "–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:")
            await bot.copy_message(
                chat_id=user_id,
                from_chat_id=message.chat.id,
                message_id=message.message_id 
            )
        except Exception as e:
            await message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ID {user_id}. –û—à–∏–±–∫–∞: {e}")
    else:
        await message.reply("–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é '–û—Ç–≤–µ—Ç–∏—Ç—å' –Ω–∞ –µ–≥–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")


# --- 4. –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ —á–∞—Ç–∞ ---

@router.message(Support.active_chat, Command("stop"))
async def stop_support_chat_handler(message: types.Message, state: FSMContext, lexicon: dict):
    lang = (await state.get_data()).get('language', 'ru')
    await state.set_state(None) 
    
    await message.answer(lexicon[lang].get('support-goodbye', "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —á–∞—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."))